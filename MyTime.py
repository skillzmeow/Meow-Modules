__version__ = (1,0,0)
#module by:
#‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñÄ‚ñà‚ÄÉ
#‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ÄÉ

#‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ñë‚ñà
#‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ
# you can edit this module
#2022

#scope: hikka_only
#meta developer: @skillzmeow

import logging

from .. import loader, utils
from telethon.tl.types import Message
import time
import datetime

class MyTimeMod(loader.Module):
    strings = {
        "name": "MyTime",
        "time": "‚è≥ <b>Accuracy time:</b> <code>{}</code>",
        "datetime": "üìÜ <b>Date:</b> <code>{}</code>\n‚è≥ <b>Accuracy time:</b> <code>{}</code>\n{} <code>{} days, {} hours, {} min</code>",
        }
    strings_ru = {
        "name": "MyTime",
        "time": "‚è≥ <b>–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è:</b> <code>{}</code>",
        "datetime": "üìÜ <b>–î–∞—Ç–∞:</b> <code>{}</code>\n‚è≥ <b>–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è:</b> <code>{}</code>\n{} <code>{} –¥–Ω–µ–π, {} —á–∞—Å–∞, {} –º–∏–Ω</code>",
        }
    
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "year",
                "2023",
                lambda: "–£–∫–∞–∂–∏—Ç–µ –≥–æ–¥ (–ø—Ä–∏–º–µ—Ä - 2022)"
                ),
            loader.ConfigValue(
                "month",
                "1",
                lambda: "–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—è—Ü (–ø—Ä–∏–º–µ—Ä - 1 –∏–ª–∏ 10, –±–µ–∑ 0)"
                ),
            loader.ConfigValue(
                "day",
                "1",
                lambda: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –º–µ—Å—è—Ü–∞"
                ),
            loader.ConfigValue(
                "datetext",
                "<b>–î–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å:</b>",
                lambda: "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–ª—è –≤–∞—à–µ–π –¥–∞—Ç—ã (<b>–î–æ –º–æ–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å:</b>, <code>, <i> –∏ —Ç.–¥.)"),
            )
    
    @loader.unrestricted
    async def datecmd(self, message: Message):
        """–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è"""
        year = int(self.config["year"])
        month = int(self.config["month"])
        day = int(self.config["day"])
        dt = datetime.datetime.now()
        date = dt.strftime("%x")
        time = dt.strftime("%H:%M:%S")
        now = datetime.datetime.today()
        NY = datetime.datetime(year, month, day)
        d = NY - now
        mm, ss = divmod(d.seconds, 60)
        hh, mm = divmod(mm, 60)
        await self.inline.form(message=message, text=self.strings("datetime").format(
                date,
                time,
                self.config["datetext"],
                d.days,
                hh,
                mm,
                )
            )